==28008== Memcheck, a memory error detector
==28008== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28008== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28008== Command: ./a.out
==28008== Parent PID: 26390
==28008== 
--28008-- 
--28008-- Valgrind options:
--28008--    --tool=memcheck
--28008--    --leak-check=full
--28008--    --verbose
--28008--    --log-file=memcheck.log
--28008-- Contents of /proc/version:
--28008--   Linux version 2.6.32-642.el6.x86_64 (mockbuild@x86-033.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-17) (GCC) ) #1 SMP Wed Apr 13 00:51:26 EDT 2016
--28008-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--28008-- Page sizes: currently 4096, max supported 4096
--28008-- Valgrind library directory: /usr/lib64/valgrind
--28008-- Reading syms from /home/shay/a/hu298/Desktop/pa03/a.out
--28008-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28008--    object doesn't have a dynamic symbol table
--28008-- Reading syms from /lib64/ld-2.12.so
--28008--   Considering /usr/lib/debug/.build-id/f3/eebd18e66eb139ea4d76cdfa86d643abcf0070.debug ..
--28008--   .. build-id is valid
--28008-- Scheduler: using generic scheduler lock implementation.
--28008-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28008== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28008-by-hu298-on-ecegrid-thin2.ecn.purdue.edu
==28008== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28008-by-hu298-on-ecegrid-thin2.ecn.purdue.edu
==28008== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28008-by-hu298-on-ecegrid-thin2.ecn.purdue.edu
==28008== 
==28008== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28008== don't want to do, unless you know exactly what you're doing,
==28008== or are doing some strange experiment):
==28008==   /usr/lib64/valgrind/../../bin/vgdb --pid=28008 ...command...
==28008== 
==28008== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28008==   /path/to/gdb ./a.out
==28008== and then give GDB the following command
==28008==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28008
==28008== --pid is optional if only one valgrind process is running
==28008== 
--28008-- REDIR: 0x3debe17d10 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28008-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28008-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28008-- REDIR: 0x3debe17b20 (index) redirected to 0x4a07c30 (index)
--28008-- REDIR: 0x3debe17ba0 (strcmp) redirected to 0x4a08570 (strcmp)
--28008-- Reading syms from /lib64/libc-2.12.so
--28008--   Considering /usr/lib/debug/.build-id/24/d3ab3db0f38c7515feadf82191651da4117a18.debug ..
--28008--   .. build-id is valid
--28008-- REDIR: 0x3dec284e60 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28008-- REDIR: 0x3dec287120 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28008-- REDIR: 0x3dec282dd0 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--28008-- REDIR: 0x3dec2812f0 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--28008-- REDIR: 0x3dec284690 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--28008-- REDIR: 0x3dec28ac80 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--28008-- REDIR: 0x3dec27ba00 (free) redirected to 0x4a063a9 (free)
==28008== 
==28008== HEAP SUMMARY:
==28008==     in use at exit: 0 bytes in 0 blocks
==28008==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==28008== 
==28008== All heap blocks were freed -- no leaks are possible
==28008== 
==28008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
--28008-- 
--28008-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28008-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28008== 
==28008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 6 from 6)
